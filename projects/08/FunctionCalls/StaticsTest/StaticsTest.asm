@256
D=A
@0
M=D
@Boot$ret0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@LCL
M=D
@ARG
D=M
@LCL
A=M
M=D
@THIS
D=M
@LCL
AM=M+1
M=D
@THAT
D=M
@LCL
AM=M+1
M=D
@SP
D=M
@ARG
M=D
@LCL
MD=M+1
@SP
M=D
@Sys.init
0;JMP
(Boot$ret0)
// function Class1.set 0
(Class1.set)
@0
D=A
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
M=M-1
@Class1.0
D=A
@SP
A=M+1
M=D
A=A-1
D=M
A=A+1
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
M=M-1
@Class1.1
D=A
@SP
A=M+1
M=D
A=A-1
D=M
A=A+1
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@ARG
D=M
@5
M=D
@SP
A=M-1
D=M
@6
M=D
@ARG
D=M+1
@SP
M=D
@LCL
AM=M-1
D=M
@THAT
M=D
@LCL
AM=M-1
D=M
@THIS
M=D
@LCL
AM=M-1
D=M
@ARG
M=D
@LCL
AM=M-1
A=A-1
D=M
@7
M=D
@LCL
A=M
D=M
@LCL
M=D
@6
D=M
@5
A=M
M=D
@7
A=M
0;JMP
// function Class1.get 0
(Class1.get)
@0
D=A
// push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// return
@ARG
D=M
@5
M=D
@SP
A=M-1
D=M
@6
M=D
@ARG
D=M+1
@SP
M=D
@LCL
AM=M-1
D=M
@THAT
M=D
@LCL
AM=M-1
D=M
@THIS
M=D
@LCL
AM=M-1
D=M
@ARG
M=D
@LCL
AM=M-1
A=A-1
D=M
@7
M=D
@LCL
A=M
D=M
@LCL
M=D
@6
D=M
@5
A=M
M=D
@7
A=M
0;JMP
// function Sys.init 0
(Sys.init)
@0
D=A
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
@Sys.init$ret0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@LCL
M=D
@ARG
D=M
@LCL
A=M
M=D
@THIS
D=M
@LCL
AM=M+1
M=D
@THAT
D=M
@LCL
AM=M+1
M=D
@SP
D=M
D=D-1
D=D-1
@ARG
M=D
@LCL
MD=M+1
@SP
M=D
@Class1.set
0;JMP
(Sys.init$ret0)
// pop temp 0
@SP
M=M-1
@0
D=A
@5
D=D+A
@SP
A=M+1
M=D
A=A-1
D=M
A=A+1
A=M
M=D
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
@Sys.init$ret1
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@LCL
M=D
@ARG
D=M
@LCL
A=M
M=D
@THIS
D=M
@LCL
AM=M+1
M=D
@THAT
D=M
@LCL
AM=M+1
M=D
@SP
D=M
D=D-1
D=D-1
@ARG
M=D
@LCL
MD=M+1
@SP
M=D
@Class2.set
0;JMP
(Sys.init$ret1)
// pop temp 0
@SP
M=M-1
@0
D=A
@5
D=D+A
@SP
A=M+1
M=D
A=A-1
D=M
A=A+1
A=M
M=D
// call Class1.get 0
@Sys.init$ret2
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@LCL
M=D
@ARG
D=M
@LCL
A=M
M=D
@THIS
D=M
@LCL
AM=M+1
M=D
@THAT
D=M
@LCL
AM=M+1
M=D
@SP
D=M
@ARG
M=D
@LCL
MD=M+1
@SP
M=D
@Class1.get
0;JMP
(Sys.init$ret2)
// call Class2.get 0
@Sys.init$ret3
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@LCL
M=D
@ARG
D=M
@LCL
A=M
M=D
@THIS
D=M
@LCL
AM=M+1
M=D
@THAT
D=M
@LCL
AM=M+1
M=D
@SP
D=M
@ARG
M=D
@LCL
MD=M+1
@SP
M=D
@Class2.get
0;JMP
(Sys.init$ret3)
// label WHILE
(Sys.init$WHILE)
// goto WHILE
@Sys.init$WHILE
0;JMP
// function Class2.set 0
(Class2.set)
@0
D=A
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
M=M-1
@Class2.0
D=A
@SP
A=M+1
M=D
A=A-1
D=M
A=A+1
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
M=M-1
@Class2.1
D=A
@SP
A=M+1
M=D
A=A-1
D=M
A=A+1
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@ARG
D=M
@5
M=D
@SP
A=M-1
D=M
@6
M=D
@ARG
D=M+1
@SP
M=D
@LCL
AM=M-1
D=M
@THAT
M=D
@LCL
AM=M-1
D=M
@THIS
M=D
@LCL
AM=M-1
D=M
@ARG
M=D
@LCL
AM=M-1
A=A-1
D=M
@7
M=D
@LCL
A=M
D=M
@LCL
M=D
@6
D=M
@5
A=M
M=D
@7
A=M
0;JMP
// function Class2.get 0
(Class2.get)
@0
D=A
// push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// return
@ARG
D=M
@5
M=D
@SP
A=M-1
D=M
@6
M=D
@ARG
D=M+1
@SP
M=D
@LCL
AM=M-1
D=M
@THAT
M=D
@LCL
AM=M-1
D=M
@THIS
M=D
@LCL
AM=M-1
D=M
@ARG
M=D
@LCL
AM=M-1
A=A-1
D=M
@7
M=D
@LCL
A=M
D=M
@LCL
M=D
@6
D=M
@5
A=M
M=D
@7
A=M
0;JMP
